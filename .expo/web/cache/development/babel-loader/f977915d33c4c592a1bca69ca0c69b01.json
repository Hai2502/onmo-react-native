{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext } from 'react';\nimport AuthContext from \"../../../context/authContext/AuthContext\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Accounts from \"../../../models/auth/data.json\";\nimport logo from \"../../../assets/logo.jpg\";\n\nvar Login = function Login() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useContext = useContext(AuthContext),\n      onAuthentication = _useContext.onAuthentication;\n\n  var onUserAuthentication = function onUserAuthentication() {\n    var authInfo = Accounts.find(function (element) {\n      return element.email === email && element.password === password;\n    });\n\n    if (authInfo == null) {\n      alert('The email or password is incorrect');\n      return;\n    }\n\n    onAuthentication();\n    console.log(authInfo);\n    console.log(Accounts);\n  };\n\n  var onInputChange = function onInputChange(value, setState) {\n    setState(value);\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.imageArea\n  }, React.createElement(Image, {\n    source: logo,\n    style: {\n      width: 190,\n      height: 73,\n      marginTop: 51\n    }\n  })), React.createElement(View, {\n    style: styles.inputArea\n  }, React.createElement(Text, null, \"Email\"), React.createElement(TextInput, {\n    style: styles.inputEmail,\n    placeholder: \"Enter your email here..\",\n    value: email,\n    onChangeText: function onChangeText(value) {\n      return onInputChange(value, setEmail);\n    }\n  }), React.createElement(Text, null, \"Password\"), React.createElement(TextInput, {\n    style: styles.inputPassword,\n    secureTextEntry: true,\n    placeholder: \"Enter your password here..\",\n    value: password,\n    onChangeText: function onChangeText(value) {\n      return onInputChange(value, setPassword);\n    }\n  }), React.createElement(Text, {\n    style: styles.Des\n  }, \"Must contains 8 Characters, One Uppercase, One Lowercase and One Number\"), React.createElement(TouchableOpacity, {\n    style: styles.buttonLogin,\n    onPress: onUserAuthentication\n  }, React.createElement(Text, null, \"Sign In\"))), React.createElement(View, {\n    style: styles.footArea\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 20\n  },\n  inputEmail: {\n    width: 400,\n    height: 49,\n    marginBottom: 24,\n    borderWidth: 1,\n    borderRadius: 8,\n    borderColor: '#C0C0C0'\n  },\n  inputPassword: {\n    width: 400,\n    height: 49,\n    borderWidth: 1,\n    borderRadius: 8,\n    borderColor: '#C0C0C0'\n  },\n  buttonLogin: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 50,\n    width: 400,\n    backgroundColor: '#C0C0C0',\n    borderWidth: 0.5,\n    borderColor: '#333',\n    flexDirection: 'row',\n    color: '#fff',\n    borderRadius: 25\n  },\n  imageArea: {\n    flex: 1\n  },\n  inputArea: {\n    flex: 2\n  },\n  footArea: {\n    flex: 1\n  },\n  Des: {\n    fontSize: 12,\n    marginTop: 4,\n    marginLeft: 0,\n    color: '@e0e0e0',\n    letterSpacing: -0.2\n  }\n});\nexport default Login;","map":{"version":3,"sources":["/Users/nelisoftwares/Projects/onmo-react-native/views/screens/preAuthScreens/login.js"],"names":["React","useState","useContext","AuthContext","Accounts","logo","Login","email","setEmail","password","setPassword","onAuthentication","onUserAuthentication","authInfo","find","element","alert","console","log","onInputChange","value","setState","styles","container","imageArea","width","height","marginTop","inputArea","inputEmail","inputPassword","Des","buttonLogin","footArea","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","padding","marginBottom","borderWidth","borderRadius","borderColor","flexDirection","color","fontSize","marginLeft","letterSpacing"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport AuthContext from '../../../context/authContext/AuthContext'\nimport { View, Text, Button, Image, TouchableOpacity, StyleSheet, TextInput } from 'react-native';\nimport Accounts from '../../../models/auth/data.json'\nimport logo from '../../../assets/logo.jpg'\n\n\nconst Login = () => {\n\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const { onAuthentication } = useContext(AuthContext)\n\n  const onUserAuthentication = () => {\n    const authInfo = Accounts.find((element) => {\n      return element.email === email && element.password === password\n    })\n    if (\n      authInfo  == null\n    ) {\n      alert('The email or password is incorrect')\n      return\n      \n    }\n    onAuthentication()\n    console.log(authInfo)\n    console.log(Accounts)\n  }\n\n  const onInputChange = (value, setState) => {\n    setState(value);\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.imageArea}>\n        <Image source={logo} style={{width: 190, height: 73, marginTop: 51}}/> \n      </View>\n\n      <View style={styles.inputArea}>\n        <Text>Email</Text>\n        <TextInput\n          style={styles.inputEmail}\n          placeholder=\"Enter your email here..\"\n          value={email}\n          onChangeText={(value) => onInputChange(value, setEmail)}\n        />\n        <Text>Password</Text>\n        <TextInput\n          style={styles.inputPassword}\n          secureTextEntry={true}\n          placeholder=\"Enter your password here..\"\n          value={password}\n          onChangeText={(value) => onInputChange(value, setPassword)}\n        />\n        <Text style={styles.Des}>Must contains 8 Characters, One Uppercase, One Lowercase and One Number</Text>\n        <TouchableOpacity style={styles.buttonLogin}  onPress={onUserAuthentication}>\n          <Text>\n            Sign In\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n      <View style={styles.footArea}>\n\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 20, \n  },\n\n  inputEmail: {\n    width: 400,\n    height: 49,\n    marginBottom: 24,\n    borderWidth: 1,\n    borderRadius: 8,\n    borderColor: '#C0C0C0'\n  },\n  inputPassword: {\n    width: 400,\n    height: 49,\n    borderWidth: 1,\n    borderRadius: 8,\n    borderColor: '#C0C0C0'\n  },\n  buttonLogin:{\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 50,\n    width: 400,\n    backgroundColor: '#C0C0C0',\n    borderWidth: 0.5,\n    borderColor: '#333',\n    flexDirection: 'row',\n    color: '#fff',\n    borderRadius: 25\n  },\n  imageArea:{\n    flex: 1\n  },\n  inputArea:{\n    flex: 2\n  },\n  footArea:{\n    flex: 1\n  },\n  Des:{\n    fontSize: 12,\n    marginTop: 4,\n    marginLeft: 0,\n    color: '@e0e0e0',\n    letterSpacing: -0.2\n  }\n\n})\n\nexport default Login"]},"metadata":{},"sourceType":"module"}