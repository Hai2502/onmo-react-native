{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext } from 'react';\nimport AuthContext from \"../../../context/authContext/AuthContext\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Accounts from \"../../../models/auth/data.json\";\n\nvar WelcomeScreen = function WelcomeScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useContext = useContext(AuthContext),\n      onAuthentication = _useContext.onAuthentication;\n\n  var onUserAuthentication = function onUserAuthentication() {\n    var authInfo = Accounts.find(function (element) {\n      return element.email === email && element.password === password;\n    });\n\n    if (authInfo == null) {\n      alert('The email or password is incorrect');\n      return;\n    }\n\n    onAuthentication();\n    console.log(authInfo);\n    console.log(Accounts);\n  };\n\n  var onInputChange = function onInputChange(value, setState) {\n    setState(value);\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.header\n  }, \"LOGIN\"), React.createElement(View, null, React.createElement(TextInput, {\n    style: styles.inputs,\n    placeholder: \"Enter your email here..\",\n    value: email,\n    onChangeText: function onChangeText(value) {\n      return onInputChange(value, setEmail);\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputs,\n    secureTextEntry: true,\n    placeholder: \"Enter your password here..\",\n    value: password,\n    onChangeText: function onChangeText(value) {\n      return onInputChange(value, setPassword);\n    }\n  }), React.createElement(Button, {\n    style: styles.buttonLogin,\n    title: \"AUTHENTICATE\",\n    onPress: onUserAuthentication\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  header: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    marginBottom: 30\n  },\n  inputs: {\n    width: 300,\n    height: 40,\n    marginBottom: 10,\n    borderWidth: 1,\n    borderRadius: 19\n  },\n  buttonLogin: {\n    borderRadius: 15\n  }\n});\nexport default login;","map":{"version":3,"sources":["/Users/nelisoftwares/Projects/onmo-react-native/views/screens/preAuthScreens/login.js"],"names":["React","useState","useContext","AuthContext","Accounts","WelcomeScreen","email","setEmail","password","setPassword","onAuthentication","onUserAuthentication","authInfo","find","element","alert","console","log","onInputChange","value","setState","styles","container","header","inputs","buttonLogin","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","padding","fontSize","fontWeight","marginBottom","width","height","borderWidth","borderRadius","login"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport AuthContext from '../../../context/authContext/AuthContext'\nimport { View, Text, Button, StyleSheet, TextInput } from 'react-native';\nimport Accounts from '../../../models/auth/data.json'\n\n\nconst WelcomeScreen = () => {\n\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const { onAuthentication } = useContext(AuthContext)\n\n  const onUserAuthentication = () => {\n    const authInfo = Accounts.find((element) => {\n      return element.email === email && element.password === password\n    })\n    if (\n      authInfo  == null\n    ) {\n      alert('The email or password is incorrect')\n      return\n      \n    }\n    onAuthentication()\n    console.log(authInfo)\n    console.log(Accounts)\n  }\n\n  const onInputChange = (value, setState) => {\n    setState(value);\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.header}>LOGIN</Text>\n      <View>\n        <TextInput\n          style={styles.inputs}\n          placeholder=\"Enter your email here..\"\n          value={email}\n          onChangeText={(value) => onInputChange(value, setEmail)}\n        />\n        <TextInput\n          style={styles.inputs}\n          secureTextEntry={true}\n          placeholder=\"Enter your password here..\"\n          value={password}\n          onChangeText={(value) => onInputChange(value, setPassword)}\n        />\n        <Button style={styles.buttonLogin}  title=\"AUTHENTICATE\" onPress={onUserAuthentication} />\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20, \n  },\n  header: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    marginBottom: 30\n  },\n  inputs: {\n    width: 300,\n    height: 40,\n    marginBottom: 10,\n    borderWidth: 1,\n    borderRadius: 19\n  },\n  buttonLogin:{\n    borderRadius: 15\n  }\n})\n\nexport default login"]},"metadata":{},"sourceType":"module"}